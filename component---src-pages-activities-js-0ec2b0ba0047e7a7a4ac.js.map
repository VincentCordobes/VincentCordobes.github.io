{"version":3,"sources":["webpack:///./src/pages/activities.js","webpack:///./src/components/layout.js"],"names":["buildDataset","data","datasets","backgroundColor","borderColor","borderWidth","label","Activities","props","_this","currentMonth","_React$Component","call","this","state","DateTime","local","month","range","map","i","x","fromObject","toJSDate","y","componentDidMount","_this2","fetch","method","headers","Cache-Control","then","response","text","split","lines","slice","filter","identity","fromISO","date","toFormat","groupBy","mapValues","size","toPairs","dates","setState","_ref","count","fromFormat","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","react_chartjs_2__WEBPACK_IMPORTED_MODULE_16__","width","height","options","LINE_OPTIONS","React","Component","scales","xAxes","type","display","yAxes","ticks","min","max","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","children","id"],"mappings":"+UAmBA,SAASA,EAAaC,GAQpB,MAAO,CAAEC,SAAU,CAPN,CACXC,gBAAiB,0BACjBC,YAAa,oBACbC,YAAa,EACbC,MAAO,mBACPL,cAcEM,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EARbC,EAQa,OACjBD,EAAAE,EAAAC,KAAAC,KAAML,IAANK,MACKC,MAAQ,CACXb,MAXES,EAAeK,WAASC,QAAQC,MAC/BC,IAFa,EAEMR,EAAe,GAAGS,IAAI,SAAAC,GAAC,MAAK,CACpDC,EAAGN,WAASO,WAAW,CAAEL,MAAOG,IAAKG,WACrCC,EAAG,UAKcf,sCAOnBgB,kBAAA,WAAoB,IAAAC,EAAAb,KAClBc,MA/BF,0FA+BkB,CACdC,OAAQ,MACRC,QAAS,CACPC,gBAAiB,cAGlBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,MAAM,QACxBH,KAAK,SAAAI,GAAK,OAAIA,EAAMC,MAAM,KAC1BL,KAAKM,IAAOC,MACZP,KAAKZ,IAAIJ,WAASwB,UAClBR,KAAKZ,IAAI,SAAAqB,GAAI,OAAIA,EAAKC,SAAS,cAC/BV,KAAKW,IAAQJ,MACbP,KAAKY,IAAUC,MACfb,KAAKc,KACLd,KAAK,SAAAe,GAAK,OACTpB,EAAKqB,SAAS,CACZ9C,KAAMkB,IACJ,SAAA6B,GAAA,IAAER,EAAFQ,EAAA,GAAQC,EAARD,EAAA,SAAoB,CAClB3B,EAAGN,WAASmC,WAAWV,EAAM,WAAWjB,WACxCC,EAAGyB,IAELH,UAMVK,OAAA,WAAS,IACClD,EAASY,KAAKC,MAAdb,KACR,OACEmD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEvD,KAAMD,EAAaC,GACnBwD,MAAO,IACPC,OAAQ,IACRC,QAASC,SA7CMC,IAAMC,WAoDzBF,EAAe,CACnBG,OAAQ,CACNC,MAAO,CAAC,CAAEC,KAAM,OAAQC,SAAS,IACjCC,MAAO,CACL,CACED,SAAS,EACTE,MAAO,CAAEC,IAAK,EAAGC,IAAK,QAMf/D,8CCvGf,IAAAgE,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAIeI,IAFA,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,SAAH,OAAkBH,EAAApB,EAAAC,cAAA,OAAKuB,GAAG,UAAUD","file":"component---src-pages-activities-js-0ec2b0ba0047e7a7a4ac.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { DateTime } from 'luxon'\nimport map from 'lodash/fp/map'\nimport groupBy from 'lodash/fp/groupBy'\nimport mapValues from 'lodash/fp/mapValues'\nimport sum from 'lodash/fp/sum'\nimport filter from 'lodash/fp/filter'\nimport size from 'lodash/fp/size'\nimport toPairs from 'lodash/fp/toPairs'\nimport identity from 'lodash/fp/identity'\nimport range from 'lodash/fp/range'\nimport sortBy from 'lodash/fp/sortBy'\nimport Chart from 'chart.js'\nimport { Line } from 'react-chartjs-2'\n\nconst FILE_URL =\n  'https://cors-anywhere.herokuapp.com/www.dropbox.com/s/dpbdlobcf6y1snn/workout.gpi?raw=1'\n\nfunction buildDataset(data) {\n  const line = {\n    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n    borderColor: 'rgb(54, 162, 235)',\n    borderWidth: 1,\n    label: 'activities count',\n    data,\n  }\n  return { datasets: [line] }\n}\n\nfunction initialData() {\n  const START_MONTH = 4 // April\n  const currentMonth = DateTime.local().month\n  return range(START_MONTH, currentMonth + 1).map(i => ({\n    x: DateTime.fromObject({ month: i }).toJSDate(),\n    y: null,\n  }))\n}\n\nclass Activities extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: initialData(),\n    }\n  }\n\n  componentDidMount() {\n    fetch(FILE_URL, {\n      method: 'GET',\n      headers: {\n        'Cache-Control': 'no-cache',\n      },\n    })\n      .then(response => response.text())\n      .then(text => text.split('\\n'))\n      .then(lines => lines.slice(2))\n      .then(filter(identity))\n      .then(map(DateTime.fromISO))\n      .then(map(date => date.toFormat('yyyy MM')))\n      .then(groupBy(identity))\n      .then(mapValues(size))\n      .then(toPairs)\n      .then(dates =>\n        this.setState({\n          data: map(\n            ([date, count]) => ({\n              x: DateTime.fromFormat(date, 'yyyy MM').toJSDate(),\n              y: count,\n            }),\n            dates\n          ),\n        })\n      )\n  }\n\n  render() {\n    const { data } = this.state\n    return (\n      <Layout>\n        <Line\n          data={buildDataset(data)}\n          width={200}\n          height={200}\n          options={LINE_OPTIONS}\n        />\n      </Layout>\n    )\n  }\n}\n\nconst LINE_OPTIONS = {\n  scales: {\n    xAxes: [{ type: 'time', display: true }],\n    yAxes: [\n      {\n        display: true,\n        ticks: { min: 0, max: 20 },\n      },\n    ],\n  },\n}\n\nexport default Activities\n","import React from 'react'\n\nconst Layout = ({ children }) => <div id=\"layout\">{children}</div>\n\nexport default Layout\n"],"sourceRoot":""}