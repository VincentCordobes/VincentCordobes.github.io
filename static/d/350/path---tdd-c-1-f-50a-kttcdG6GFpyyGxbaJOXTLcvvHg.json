{"data":{"site":{"siteMetadata":{"title":"Vincent's page","author":"Vincent Cordobes"}},"markdownRemark":{"id":"6a76622d-8b41-5f82-b9a2-6897ba255306","html":"<p>Do you remember back in the days, in high school, when you were given just 4 hours to write a splendid essay but you didn’t know where to start, feeling afraid of the blank page ?  </p>\n<p>Isn’t it similar in software development when you get a new feature to implement, a new problem to solve or a bug to fix?  How do I find a solution to the given problem? How can I be sure that it’s a good solution and it actually does what we expect it to do ?</p>\n<p>Also, just like we want the essay to be splendid, our ultimate goal is to provide clean, robust, consistent solution. Easier said than done I hear! but it’s our goal anyway!</p>\n<p>In this post I am going to talk about one way I often use to approach a problem.</p>\n<h2>Before coding</h2>\n<p>Well, the first question I ask myself is - “Okay, what’s the input ?” - “what’s the action?” and “Which output/observable changes do I expect in my system?” </p>\n<p>Does it make you think of something? Well I guess writing a test can help, that’s usually its three composites</p>\n<hr>\n<h2>I initially did not want to use the term ‘testing’ but you’ve guessed it so I won’t beat around the bush.</h2>\n<h2>Red-Green factor</h2>\n<p>First let me quote the three rules of Uncle Bob:</p>\n<ul>\n<li>You are not allowed to write any production code unless it is to make a failing unit test pass.</li>\n<li>You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures.</li>\n<li>You are not allowed to write any more production code than is sufficient to pass the one failing unit test.</li>\n</ul>","frontmatter":{"title":"How to approach a problem","date":"January 31, 2019","spoiler":"Gonna talk about tdd","thumbnail":null},"fields":{"slug":"/tdd/"}}},"pageContext":{"slug":"/tdd/","previous":{"fields":{"slug":"/git-rebase/"},"frontmatter":{"title":"Rewrite the past in fewer steps with rebase"}},"next":null}}