{"data":{"site":{"siteMetadata":{"title":"Vincent's page","author":"Vincent Cordobes"}},"markdownRemark":{"id":"14bdcbc8-d066-5675-b1c3-877ea6091375","html":"<p>⚠️ I assume you have basic knowledge about git, and that you are familiar with its index, working tree as well as commands like reset and cherry-pick</p>\n<p>There are lots of commands in git and you can often achieve your goal in several different ways. I usually manage to get my stuff done with just few cmds like rebase, reset, cherry-pick. But sometimes I felt I was doing it in an ineffective way. Like for example <em>squashing</em> all commits into a single one so that it is easier to <em>rebase</em> afterward 🙈\nEven though I knew that rebasing with the <code class=\"language-text\">--onto</code> option would be useful, I never took the time to <em>man</em> it… until recently.</p>\n<p>I guess now is a good time to write something about it (Actually I just want to inaugurate my blog… any reason is a good reason 😝)</p>\n<h3>When can the <code class=\"language-text\">--onto</code> option be useful?</h3>\n<p>Here are some use-cases:</p>\n<ul>\n<li>you want to <em>cherry-pick</em> multiples commits</li>\n<li>you have created a branch from the <em>wrong</em> one and you want to bring all the commits to the <em>right</em> one</li>\n<li>you want to delete a range of commits</li>\n</ul>\n<p>Basically it all comes down to this: <strong>apply a range of commits somewhere else</strong> </p>\n<h3>Rebase in its simplest form</h3>\n<p>Lets begin with a little reminder about how rebase works in its simplest form. From the man (unix) we get:</p>\n<!-- ```\ngit rebase upstream [branch]\n``` -->\n<pre class=\"language-text\">\n<code class=\"language-text\">git rebase <span style=\"background:#ffe5ee\">upstream</span> <span style=\"background:#ffefc0\">[branch]</span></code>\n</pre>\n<p>I am gonna give some examples and intentionally avoid any short-hand way at first.</p>\n<figure>\n    <iframe style=\"height:110px;\" scrolling=\"no\" src=\"/git1/\"></iframe>\n    <figcaption>git rebase master (tap to animate)</figcaption>\n</figure>\n<!-- When you run the command `git rebase master topic` then: -->\n<p>When you run the command <code class=\"language-text\">git rebase <span style=\"background:#ffe5ee\">master</span> <span style=\"background:#ffefc0\">topic</span></code> then:</p>\n<ol start=\"0\">\n<li>Git performs a <code class=\"language-text\">checkout topic</code></li>\n<li>The index and working tree are reset to master. This is exactly like running <code class=\"language-text\">git reset --hard master</code> except that commits <em>E, F, G</em> are put aside for later use. Basically all commits that are in <em>topic</em> but not in <em>master</em> (<code class=\"language-text\">master..topic</code>)</li>\n<li>Those commits are applied one by one on master. This is like <em>cherry-picking</em> them.</li>\n</ol>\n<p>Step 2 may fail applying the commits. You can either resolve the conflict and run <code class=\"language-text\">git rebase --continue</code> or abort the rebase with <code class=\"language-text\">git rebase --abort</code></p>\n<p><strong>Note</strong> If you already are on the <em>topic</em> branch (<em>HEAD → topic</em>) then you can omit the <span style=\"background:#ffefc0\">[branch]</span> arg and just type <code class=\"language-text\">git rebase master</code> (step 0 is skipped) This is a common short-hand.</p>\n<h3>How about the <code class=\"language-text\">--onto</code> option?</h3>\n<!-- ```\ngit rebase --onto newbase upstream [branch]\n``` -->\n<pre class=\"language-text\">\n<code class=\"language-text\">git rebase --onto <span style=\"background:#eff3c5\">newbase</span> <span style=\"background:#ffe5ee\">upstream</span> <span style=\"background:#ffefc0\">[branch]</span></code>\n</pre>\n<p>The only difference is in step 1. Git hard reset to <span style=\"background:#eff3c5\">newbase</span> (instead of <span style=\"background:#ffe5ee\">upstream</span>)<br>\nStep 2 remains the same, commits <em>upstream..branch</em> are applied.</p>\n<!--\n%% ouverture\n### Feel the power of `-i` option\nThe `-i` option is one of my favorite one because it lets you squash, delete, rename, edit... basically playing with the past !! ❤️  but this is another story\n-->","frontmatter":{"title":"Rebase - rewrite the past in fewer steps (wip)","date":"December 26, 2018","spoiler":"Demistify git rebase"},"fields":{"slug":"/git-rebase/"}}},"pageContext":{"slug":"/git-rebase/","previous":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}},"next":null}}