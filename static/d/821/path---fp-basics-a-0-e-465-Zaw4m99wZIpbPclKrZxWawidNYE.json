{"data":{"site":{"siteMetadata":{"title":"Vincent's page","author":"Vincent Cordobes"}},"markdownRemark":{"id":"9b921c75-89cb-559e-a070-b21b9eaed8ca","html":"<p>The essence of programming is composition. In the OOP paradigm we are building sofware by using Object that communicates with each other. To build bigger software we compose those objects. The object is the building block</p>\n<p>In FP the building blocks are functions! Each function operate on data.\nThe software is made using functions and we compose them to build bigger software.</p>\n<p>What is functional programming? what are those principle?\nGonna talk here about the very basics of FP using the functional language OCaml</p>\n<h3>Pure function</h3>\n<ol>\n<li>Its result depends only on its input—and not on any external state</li>\n<li>It has no side effects such as mutating a global state/reference arguments, having I/O…</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ocaml\"><pre class=\"language-ocaml\"><code class=\"language-ocaml\"><span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> ref <span class=\"token number\">0</span>\n<span class=\"token keyword\">let</span> increment<span class=\"token punctuation\">_</span>by n <span class=\"token operator\">=</span>\n  count <span class=\"token operator\">:=</span> <span class=\"token operator\">!</span>count <span class=\"token operator\">+</span> n</code></pre></div>\n<p>Note that in OCaml <code class=\"language-text\">let</code> binding is always immutable</p>\n<h3>Immutability</h3>\n<h3>Referential transparency</h3>\n<h3>First class function</h3>\n<h3>Higher order function</h3>\n<h3>Composition</h3>\n<h3>Curryfication</h3>","frontmatter":{"title":"Basics of Functional Programming","date":"January 31, 2019","spoiler":"Gonna talk about basics of fp","thumbnail":null},"fields":{"slug":"/fp-basics/"}}},"pageContext":{"slug":"/fp-basics/","previous":{"fields":{"slug":"/git-rebase/"},"frontmatter":{"title":"Rewrite the past in fewer steps with rebase","draft":null}},"next":{"fields":{"slug":"/tdd/"},"frontmatter":{"title":"One way to approach a problem","draft":true}}}}