{"version":3,"sources":["webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/fp/_falseOptions.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_createAggregator.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/lodash/fp/map.js","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/fp/groupBy.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/_arrayAggregator.js","webpack:///./node_modules/lodash/_baseAggregator.js","webpack:///./node_modules/lodash/fp/mapValues.js","webpack:///./node_modules/lodash/mapValues.js","webpack:///./node_modules/lodash/fp/filter.js","webpack:///./node_modules/lodash/filter.js","webpack:///./node_modules/lodash/_baseFilter.js","webpack:///./node_modules/lodash/fp/size.js","webpack:///./node_modules/lodash/size.js","webpack:///./node_modules/lodash/isString.js","webpack:///./node_modules/lodash/_stringSize.js","webpack:///./node_modules/lodash/_asciiSize.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/_unicodeSize.js","webpack:///./node_modules/lodash/fp/toPairs.js","webpack:///./node_modules/lodash/toPairs.js","webpack:///./node_modules/lodash/_createToPairs.js","webpack:///./node_modules/lodash/_baseToPairs.js","webpack:///./node_modules/lodash/_setToPairs.js","webpack:///./node_modules/lodash/fp/identity.js","webpack:///./node_modules/react-chartjs-2/es/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/moment/moment.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/keyBy.js"],"names":["baseForOwn","__webpack_require__","baseEach","createBaseEach","module","exports","cap","curry","fixed","immutable","rearg","baseFor","keys","object","iteratee","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","func","accumulator","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","id","chartjsColor","helpers","noop","uid","isNullOrUndef","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","platform","css","_loaded","_style","setAttribute","getElementsByTagName","createTextNode","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","placeholder","arrayMap","baseMap","isArrayLike","createBaseFor","fromRight","keysFunc","iterable","eachFunc","baseAssignValue","createAggregator","groupBy","arrayFilter","baseFilter","predicate","baseKeys","getTag","isString","stringSize","mapTag","setTag","tag","baseGetTag","isObjectLike","stringTag","asciiSize","hasUnicode","unicodeSize","baseProperty","reHasUnicode","RegExp","test","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","lastIndex","toPairs","createToPairs","baseToPairs","mapToArray","setToPairs","process","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this4","_ref","_React$Component3","Pie","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","Bar","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","Radar","_this14","_ref6","_React$Component8","Polar","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","on","once","off","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemHour","isPm","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseIsEqual","find","createFind","findIndexFunc","baseFindIndex","toInteger","nativeMax","keyBy"],"mappings":"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","file":"16-fa44fbc11ad054b15818.js","sourcesContent":["var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","module.exports = {\n  'cap': false,\n  'curry': false,\n  'fixed': false,\n  'immutable': false,\n  'rearg': false\n};\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","var convert = require('./convert'),\n    func = convert('map', require('../map'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var convert = require('./convert'),\n    func = convert('groupBy', require('../groupBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var convert = require('./convert'),\n    func = convert('mapValues', require('../mapValues'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var convert = require('./convert'),\n    func = convert('filter', require('../filter'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var convert = require('./convert'),\n    func = convert('size', require('../size'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n","var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n","var convert = require('./convert'),\n    func = convert('toPairs', require('../toPairs'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var createToPairs = require('./_createToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nmodule.exports = toPairs;\n","var baseToPairs = require('./_baseToPairs'),\n    getTag = require('./_getTag'),\n    mapToArray = require('./_mapToArray'),\n    setToPairs = require('./_setToPairs');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function(object) {\n    var tag = getTag(object);\n    if (tag == mapTag) {\n      return mapToArray(object);\n    }\n    if (tag == setTag) {\n      return setToPairs(object);\n    }\n    return baseToPairs(object, keysFunc(object));\n  };\n}\n\nmodule.exports = createToPairs;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nmodule.exports = baseToPairs;\n","/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nmodule.exports = setToPairs;\n","var convert = require('./convert'),\n    func = convert('identity', require('../identity'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\n\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n\n\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  };\n\n  // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n\n\n    var data = this.memoizeDataProps(this.props);\n\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    }\n\n    // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider);\n\n    // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']);\n        // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n\n\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\n\n\nexport default ChartComponent;\n\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\n\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\n\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\n\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\n\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\n\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\n\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\n\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\n\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\n\nexport var defaults = Chart.defaults;\nexport { Chart };","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.23.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n"],"sourceRoot":""}