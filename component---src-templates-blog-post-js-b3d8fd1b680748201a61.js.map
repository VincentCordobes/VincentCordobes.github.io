{"version":3,"sources":["webpack:///./node_modules/lodash/fp/identity.js","webpack:///./node_modules/lodash/fp/_falseOptions.js","webpack:///./node_modules/lodash/_baseSet.js","webpack:///./node_modules/lodash/fp/pickBy.js","webpack:///./node_modules/lodash/pickBy.js","webpack:///./node_modules/lodash/_basePickBy.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/schema-org.js"],"names":["func","convert","placeholder","module","exports","assignValue","castPath","isIndex","isObject","toKey","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","arrayMap","baseIteratee","basePickBy","getAllKeysIn","predicate","props","prop","baseGet","baseSet","paths","result","Header","to","rel","BlogPostTemplate","render","post","this","data","markdownRemark","siteMetadata","site","pageContext","previous","next","imageUrl","get","author","siteUrl","frontmatter","title","description","date","lang","id","image","slug","fields","Helmet","href","integrity","crossorigin","type","JSON","stringify","datePublished","schema","headline","name","publisher","logo","url","thumbnailUrl","mainEntityOfPage","inLanguage","pickBy","identity","schemaOrg","className","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-b3d8fd1b680748201a61.js","sourcesContent":["var convert = require('./convert'),\n    func = convert('identity', require('../identity'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","module.exports = {\n  'cap': false,\n  'curry': false,\n  'fixed': false,\n  'immutable': false,\n  'rearg': false\n};\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var convert = require('./convert'),\n    func = convert('pickBy', require('../pickBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\nimport get from \"lodash/fp/get\"\n\nimport { schemaOrg } from \"../components/schema-org\"\nimport Layout from \"../components/layout\"\nimport Vim from \"../components/vim\"\nimport SEO from \"../components/seo\"\n\n// import 'katex/dist/katex.min.css'\nimport \"./../styles/prism-theme.css\"\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\"\nimport \"./blog-post.css\"\n\nfunction Header() {\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\" rel=\"home\">\n              Home\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { siteMetadata } = this.props.data.site\n    const { previous, next } = this.props.pageContext\n\n    const imageUrl = get(\n      \"frontmatter.thumbnail.childImageSharp.sizes.src\",\n      post\n    )\n\n    const { author, siteUrl } = siteMetadata\n    const { title, description, date, lang } = post.frontmatter\n\n    return (\n      <Layout>\n        <div id=\"blog-post\">\n          <SEO\n            title={title}\n            description={description}\n            image={imageUrl}\n            author={author}\n            slug={post.fields.slug}\n          />\n          <Helmet>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.css\"\n              integrity=\"sha384-9eLZqc9ds8eNjO3TmqPeYcDj8n+Qfa4nuSiGYa6DjLNcv9BtN69ZIulL9+8CqC9Y\"\n              crossorigin=\"anonymous\"\n            />\n\n            <script type=\"application/ld+json\">\n              {JSON.stringify(\n                schemaOrg({\n                  title,\n                  description: description,\n                  image: siteMetadata.siteUrl + imageUrl,\n                  author,\n                  datePublished: date,\n                  siteUrl,\n                  lang,\n                })\n              )}\n            </script>\n          </Helmet>\n          <Header />\n          <h1>{post.frontmatter.title}</h1>\n          <p>\n            <small className=\"mono\">{date}</small>\n          </p>\n          <div\n            id=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n          <Vim />\n\n          {(previous || next) && <hr />}\n          <ul id=\"blog-post-footer\">\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n\n            <li>\n              {next && !get(\"frontmatter.draft\", next) && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </div>\n        <div className=\"author\">\n          Written by <strong>{author}</strong>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        thumbnail {\n          childImageSharp {\n            sizes(maxWidth: 144) {\n              src\n              srcSet\n              sizes\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import pickBy from \"lodash/fp/pickBy\"\nimport identity from \"lodash/fp/identity\"\n\nexport function schemaOrg({\n  author,\n  datePublished,\n  title,\n  description,\n  image,\n  siteUrl,\n  lang,\n}) {\n  const schema = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BlogPosting\",\n    headline: title,\n    name: title,\n    image,\n    publisher: {\n      \"@type\": \"Organization\",\n      name: author,\n      logo: {\n        \"@type\": \"ImageObject\",\n        url: siteUrl + \"/favicon.ico\",\n      },\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: author,\n    },\n    datePublished,\n    description,\n    thumbnailUrl: image,\n    mainEntityOfPage: {\n      \"@type\": \"WebSite\",\n      \"@id\": siteUrl,\n    },\n    inLanguage: lang,\n  }\n\n  return pickBy(identity, schema)\n}\n"],"sourceRoot":""}