{"version":3,"sources":["webpack:///./src/pages/git.js","webpack:///./src/components/layout.js"],"names":["steps","Box","posed","div","initialPose","open","staggerChildren","Item","scale","transition","type","stiffness","closed","CommitTree","_ref","motif","split","map","c","i","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","fontSize","key","AsciiLine","enter","opacity","duration","exit","Ascii","_ref2","value","displayed","_useState3","useState","prevValue","setPrevValue","display","flexDirection","pose","react_pose__WEBPACK_IMPORTED_MODULE_3__","filter","Boolean","reverse","line","Rebase","_useState","step","setStep","_useState2","setDisplay","useEffect","t","setTimeout","clearTimeout","_components_layout__WEBPACK_IMPORTED_MODULE_5__","onClick","Math","abs","length","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","children","id"],"mappings":"8JAUMA,EAAQ,2ZAuDd,IAAMC,EAAMC,IAAMC,IAAI,CACpBC,YAAa,SAGbC,KAAM,CACJC,gBAAiB,MAIfC,EAAOL,IAAMC,IAAI,CACrBE,KAAM,CACJG,MAAO,EACPC,WAAY,CAAEC,KAAM,SAAUC,UAAW,MAE3CC,OAAQ,CACNJ,MAAO,EACPC,WAAY,CAAEC,KAAM,SAAUC,UAAW,OAI7C,SAASE,EAATC,GACE,OAD6BA,EAATC,MACPC,MAAM,IAAIC,IAAI,SAACC,EAAGC,GAAJ,OACzBC,EAAAC,EAAAC,cAACf,EAAD,CAAMgB,MAAO,CAAEC,SAAU,IAAMC,IAAG,IAAMN,GAC/B,MAAND,EAAY,IAAWA,KAK9B,IAAMQ,EAAYxB,IAAMC,IAAI,CAC1BwB,MAAO,CACLC,QAAS,EACTnB,WAAY,CAAEoB,SAAU,MAE1BC,KAAM,CACJF,QAAS,EACTnB,WAAY,CAAEoB,SAAU,QAItBE,EAAQ,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,UAAgBC,EACJC,mBAAS,MAApCC,EAD+BF,EAAA,GACpBG,EADoBH,EAAA,GAKtC,OAHIE,IAAcJ,GAChBK,EAAaL,GAGbb,EAAAC,EAAAC,cAACrB,EAAD,CACEsB,MAAO,CACLgB,QAAS,OACTC,cAAe,kBAEjBC,KAAMP,EAAY,OAAS,UAE3Bd,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACGT,EACEjB,MAAM,MACN2B,OAAOC,SACPC,UACA5B,IAAI,SAAA6B,GAAI,OACP1B,EAAAC,EAAAC,cAACI,EAAD,CAAWD,IAAKqB,EAAMvB,MAAO,CAAEgB,QAAS,SACtCnB,EAAAC,EAAAC,cAACT,EAAD,CAAYE,MAAO+B,UAQlBC,UAnGf,WAAkB,IAAAC,EACQZ,mBAAS,GAA1Ba,EADSD,EAAA,GACHE,EADGF,EAAA,GAAAG,EAEgBf,oBAAS,GAAlCF,EAFSiB,EAAA,GAEEC,EAFFD,EAAA,GAWhB,OAPAE,oBAAU,WACR,IAAMC,EAAIC,WAAW,WACnBH,GAAW,IACV,KACH,OAAO,kBAAMI,aAAaF,KACzB,IAGDlC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAAA,UACEoC,QAAS,WACPR,EAAQS,KAAKC,KAAKX,EAAO,GAAKjD,EAAM6D,WAFxC,QAMU,IACVzC,EAAAC,EAAAC,cAAA,UACEoC,QAAS,WACPR,GAASD,EAAO,GAAKjD,EAAM6D,UAF/B,SAKSZ,EALT,KAOA7B,EAAAC,EAAAC,cAACS,EAAD,CAAOG,UAAWA,EAAWD,MAAOjC,EAAMiD,yCC5DhD,IAAAa,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAIeI,IAFA,SAAApD,GAAA,IAAGqD,EAAHrD,EAAGqD,SAAH,OAAkBH,EAAA3C,EAAAC,cAAA,OAAK8C,GAAG,UAAUD","file":"component---src-pages-git-js-daf79ccfc3d333965934.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport posed, { PoseGroup } from 'react-pose'\nimport { reverse, range } from 'lodash/fp'\nimport Layout from '../components/layout'\n\n// specify for each step buildIn et buildOut\n// it might be enough to trick to animation\n// We could then manage to get real transformation for elements\n// that persists between steps\nconst steps = [\n  `\n      E---F---G  topic\n     /\nA---B---C---D  master`,\n  `\n            topic \n            â†“\nA---B---C---D  master          somewhere: E---F---G`,\n  `\n              E' topic \n             /\nA---B---C---D  master          somewhere: F---G`,\n  `\n              E'--F' topic \n             /\nA---B---C---D  master          somewhere: G`,\n  `\n              E'--F'--G' topic\n             /\nA---B---C---D  master`,\n]\n\nfunction Rebase() {\n  const [step, setStep] = useState(0)\n  const [displayed, setDisplay] = useState(false)\n\n  useEffect(() => {\n    const t = setTimeout(() => {\n      setDisplay(true)\n    }, 200)\n    return () => clearTimeout(t)\n  }, [])\n\n  return (\n    <Layout>\n      <button\n        onClick={() => {\n          setStep(Math.abs((step - 1) % steps.length))\n        }}\n      >\n        back\n      </button>{' '}\n      <button\n        onClick={() => {\n          setStep((step + 1) % steps.length)\n        }}\n      >\n        next ({step})\n      </button>\n      <Ascii displayed={displayed} value={steps[step]} />\n    </Layout>\n  )\n}\n\nconst Box = posed.div({\n  initialPose: 'closed',\n  // closed: { staggerChildren: 25 },\n\n  open: {\n    staggerChildren: 15,\n  },\n})\n\nconst Item = posed.div({\n  open: {\n    scale: 1,\n    transition: { type: 'spring', stiffness: 300 },\n  },\n  closed: {\n    scale: 0,\n    transition: { type: 'spring', stiffness: 50 },\n  },\n})\n\nfunction CommitTree({ motif }) {\n  return motif.split('').map((c, i) => (\n    <Item style={{ fontSize: 20 }} key={`c${i}`}>\n      {c === ' ' ? '\\u00A0' : c}\n    </Item>\n  ))\n}\n\nconst AsciiLine = posed.div({\n  enter: {\n    opacity: 1,\n    transition: { duration: 500 },\n  },\n  exit: {\n    opacity: 0,\n    transition: { duration: 500 },\n  },\n})\n\nconst Ascii = ({ value, displayed }) => {\n  const [prevValue, setPrevValue] = useState(null)\n  if (prevValue !== value) {\n    setPrevValue(value)\n  }\n  return (\n    <Box\n      style={{\n        display: 'flex',\n        flexDirection: 'column-reverse',\n      }}\n      pose={displayed ? 'open' : 'closed'}\n    >\n      <PoseGroup>\n        {value\n          .split('\\n')\n          .filter(Boolean)\n          .reverse()\n          .map(line => (\n            <AsciiLine key={line} style={{ display: 'flex' }}>\n              <CommitTree motif={line} />\n            </AsciiLine>\n          ))}\n      </PoseGroup>\n    </Box>\n  )\n}\n\nexport default Rebase\n","import React from 'react'\n\nconst Layout = ({ children }) => <div id=\"layout\">{children}</div>\n\nexport default Layout\n"],"sourceRoot":""}